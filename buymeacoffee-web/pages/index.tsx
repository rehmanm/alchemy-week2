import { ethers } from 'ethers';
import Head from 'next/head';
import Image from 'next/image';
import {
  useEffect,
  useState
} from 'react';

import styles from '../styles/Home.module.css';
import abi from '../utils/BuyMeACoffee.json';

import type { NextPage } from 'next'
const Home: NextPage = () => {

  const contractAddress = "0x5FbDB2315678afecb367f032d93F642f64180aa3";
  const contractABI = abi.abi;

  const [currentAccount, setCurrentAccount] = useState("");
  const [name, setName] = useState("");
  const [message, setMessage] = useState("");
  const [memos, setMemos] = useState([]);
  
  const OnNameChange = (event: any) => {
    setName(event.target.value);
  }

  const OnMessageChange = (event: any) =>{
    setMessage(event.target.value);
  }

  const isWalletConnected = async() =>{
    try {
      const { ethereum } = window;
      const accounts = await ethereum.request({method: 'eth_accounts'});
      console.log(accounts)

    } catch (error) {
      console.log(error)
    }
  }

  const connectWallet = async() => {
    try {
      const { ethereum } = window;
      if (!ethereum){
        console.log("Please install MetaMask");
      }

      const accounts = await ethereum.request({
        method: 'eth_requestAccounts'
      });

      setCurrentAccount(accounts[0]);
    } catch (error) {
      console.log(error);
    }
  }

  const buyCoffee = async()=>{
    try {
      const {ethereum} =window;
    if (ethereum) {
      const provider = new ethers.providers.Web3Provider(ethereum, "any");
      const signer = provider.getSigner();
      const buyMeACoffee = new ethers.Contract(
        contractAddress,
        contractABI,
        signer
      );
    
    console.log("buying Coffee");

    const coffeeTxn = await buyMeACoffee.buyCoffee(
      name ? name: "anon",
      message ? message : "Enjoy your coffee",
      {value: ethers.utils.parseEther("0.001")}
    );

    await coffeeTxn.wait();

    console.log("mined", coffeeTxn.hash);
    console.log("coffee purchased");

    setName("");
    setMessage("");
    }
      
    } catch (error) {
      console.log(error);
    }
    
  }

  useEffect(()=>{
    let buyMeACoffee;
    isWalletConnected();
  });

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
         <h1 className={styles.title}>Buy Me A Coffee</h1>
         {currentAccount ? (
           <div>
             <form>
               <div className="formgroup">
                 <label>Name</label>
                 <br />
                 <input id='name' type='text' placeholder='anon' onChange={OnNameChange} required />
               </div>
               <div className="formgroup">
                 <label>Send Me a Message</label>
                 <br />
                 <textarea id='message'  placeholder='anon' onChange={OnMessageChange} rows={3} required ></textarea>
               </div>
               <button type='button' onClick={buyCoffee }>Send 1 coffee for 0.001 ETH</button>
             </form>
           </div>
         ): (
          <button onClick={connectWallet}> Connect your wallet </button>
         )
         }
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
